input {
	syslog {
		port => 6514
	}

}
filter {

grok {
	match => { "message" => "kernel: Intrusion -> IN=%{NOTSPACE:in} OUT=(%{NOTSPACE:out})? MAC=(%{NOTSPACE:mac})? SRC=%{NOTSPACE:src} DST=%{NOTSPACE:dst} LEN=(%{NOTSPACE:len})? TOS=(%{NOTSPACE:tos})? PREC=(%{NOTSPACE:prec})? TTL=(%{NOTSPACE:ttl})? ID=(%{NOTSPACE:id})? PROTO=(%{NOTSPACE:proto})? SPT=(%{NOTSPACE:sourceport})? DPT=(%{NOTSPACE:destport})? WINDOW=(%{NOTSPACE:window})? (%{GREEDYDATA:eventvalue})?" }

	add_tag => ["intrusion"]
}

grok {
	match => { "message" => "%{NOTSPACE} syslog: %{WORD:eventname}:(IP %{IP:ip}, mask %{IP:mask}, gateway %{IP:gateway}, dns %{IP:dns}, %{IP:dns2})?(%{GREEDYDATA:eventvalue})? " }
	add_tag => ["other"]
}

geoip {
      source => "src"
      target => "geoip"
      database => "/etc/logstash/GeoLite2-City_20170606/GeoLite2-City.mmdb"
    }

translate {
     field => "destport"
      destination => "service"
      dictionary_path => '/tmp/service_names.yaml'
   }


  range {
    ranges => [
                "ttl", 0, 64, "field:os:linux-unix",
                "ttl", 65, 128, "field:os:Windows",
                "ttl", 129, 255, "field:os:Cisco",
                 ]
  }



}

output {
if "intrusion" in [tags] {
	elasticsearch {
		template => "/etc/logstash/templates/intrusions.json"
		template_overwrite => true
		hosts => ["localhost:9200"]
		index => "intrusions-%{+YYYY.MM.dd}"
	}
}



}
